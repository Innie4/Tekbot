version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: tekbot-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: tekbot_dev
      POSTGRES_USER: tekbot_user
      POSTGRES_PASSWORD: tekbot_password
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/database/init:/docker-entrypoint-initdb.d
    networks:
      - tekbot-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U tekbot_user -d tekbot_dev']
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache & Queue
  redis:
    image: redis:7-alpine
    container_name: tekbot-redis
    restart: unless-stopped
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
      - ./infrastructure/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - tekbot-network
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API (Development)
  backend:
    build:
      context: .
      dockerfile: apps/backend/Dockerfile.dev
    container_name: tekbot-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://tekbot_user:tekbot_password@postgres:5432/tekbot_dev?schema=public
      - REDIS_URL=redis://redis:6379
    ports:
      - '3000:3000'
      - '9229:9229'  # Debug port
    volumes:
      - ./apps/backend:/app
      - ./packages:/packages
      - /app/node_modules
      - /packages/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - tekbot-network
    command: npm run start:dev

  # Frontend Chat Widget (Development)
  frontend:
    build:
      context: .
      dockerfile: apps/frontend/Dockerfile.dev
    container_name: tekbot-frontend
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:3000
    ports:
      - '3001:3001'
    volumes:
      - ./apps/frontend:/app
      - ./packages:/packages
      - /app/node_modules
      - /packages/node_modules
    networks:
      - tekbot-network
    command: npm run start

  # Admin Dashboard (Development)
  admin:
    build:
      context: .
      dockerfile: apps/admin-dashboard/Dockerfile.dev
    container_name: tekbot-admin
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:3000
    ports:
      - '3002:3002'
    volumes:
      - ./apps/admin-dashboard:/app
      - ./packages:/packages
      - /app/node_modules
      - /packages/node_modules
    networks:
      - tekbot-network
    command: npm run start

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: tekbot-nginx
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./infrastructure/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./infrastructure/nginx/conf.d:/etc/nginx/conf.d
      - ./infrastructure/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
      - admin
    networks:
      - tekbot-network
    profiles:
      - production

  # Mailhog (Email testing)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: tekbot-mailhog
    restart: unless-stopped
    ports:
      - '1025:1025'  # SMTP
      - '8025:8025'  # Web UI
    networks:
      - tekbot-network
    profiles:
      - development

  # Redis Commander (Redis GUI)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: tekbot-redis-commander
    restart: unless-stopped
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - '8081:8081'
    depends_on:
      - redis
    networks:
      - tekbot-network
    profiles:
      - development

  # pgAdmin (PostgreSQL GUI)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: tekbot-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@tekbot.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - '8080:80'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - tekbot-network
    profiles:
      - development

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  tekbot-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16